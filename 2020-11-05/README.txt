0205-random-number-generator generatore randomico direttamente implementato su modelica, senza quindi la necessitá di implementarlo attraverso gli script in python

0210-fifo-random-input monitoriamo un buffer e dobbiamo cercare di evitare l'overflow e l'underflow. modelliamo il buffer a tempo continuo (é la prima volta che lo facciamo). usiamo il generatore randomico visto in 0205-random-number-generator per generare il rate di mb in ingresso e in uscita dal buffer (logicamente con due generatori differenti). il controllore decide se accettare i dati in ingresso o meno, per evitare overflow e underflow. mentre il rate di output deciso da il random generator non é ostacolato da nulla e quindi viene rimossa ogni volta la wuantitá decisa dal generatore di output. il controllore che abbiamo programmato non é eccellente e quindi non scongiura l'overflow e l'underflow. i valori che possono alterare la modellazione, oltre alla capienza del buffer e al minimo e massimo ingresso e uscita consentito dal buffer (questi dati li consideriamo immutabili per definizione del buffer), sono: la frequenza di attivazione del controllore, e la frequenza di generazione dei valori di input e output.

0220-fifo-rnd-input-with-packages é lo stesso codice di 0210-fifo-random-input, con alcune differenze. il random generator é importato dalla libreria MLibrary, lo stream di output é costante invece che randomico come prima, e lo stream di input varia da 1.5 a 5.5, controllore si attiva ogni 0.01 secondi, e prende decizioni per variare la u con criteri differenti (adattandosi ai nuovi flussi di stream). con la frequenza di controllo a 0.01 secondi il controllore non manda in overflow o underflow il buffer. questo é stato possibile anche a causa della giusta trama che interpreta il controllore (che sarebbe il delta).