0160-traffic-light-montecarlo prende gli ultimi codice della lezione precedente e ci fa i test con montecarlo.py. si nota che il moditor fa errori e si nota anche che il monitor ferma la macchina quando é rosso sempre, ovvero sia prima che dopo aver superato il semaforo, e questo non ha senso

0170-traffic-light-montecarlo-revised-strategy il controllore considera il semaforo solo quando é davanti a lui, quindi non si ferma con il rosso anche se ha giá superato il semaforo. il controllore quindi da retta al semaforo solo se ce lha davanti, e per sicurezza fa stop anche con il giallo in questo caso. con questo setting si passano tutti i test di montecarlo.py

0180-traffic-light-montecarlo-with-sampling controllori precedenti si usava equation senza "when sample(0, T)", il che vuol dire che il controllore guardava il semaforo ogni istante. questo puó essere dispendioso, quindi il controllore ora guarda il semaforo, per prendere decisioni, ogni T secondi. questo puo indurre all'errore quindi occorre fare dei test per capire qual é il massimo valore T per cui il controllore passi tutti i test. cosí facendo si ottimizzano al minimo le decisioni che il controllore deve prendere. quindi il test montecarlo2.py fa 100 test per ogni possibile valore di T. Preso un valore T vengono fatti i 100 test, se c'é un errore si decrementa T e si rifanno 100 test. quando da un certo valore T si superano tutti i test, allora si é riconosciuto che questo valore T é il massimo intervallo di tempo per cui il driver deve guardare il semaforo per prendere comunque decisioni corrette. il file sysdesign.py trova sistematicamente il valore ottimale del sampling time del controllore, ovvero l'intervallo temporale piú grande possibile (senza comunque generare alcun errore) prima che il controllore ricontrolli e prenda decisioni sulle azioni da fare (decidere quando fermare o muovere la macchina). sysdesign.py quindi prova ogni possibile situazione, quindi ogni possibile coppia composta da arrival_delay (della macchina al semaforo) e da sampling time (frequenza di controllo del controllore). per ogni coppia quindi fa i controlli, se vi sono errori si abbassa il sampling time (mentre l'arrival delay resta sempre 20 e va ad azzerarsi per permettere tutti i test possibili per ogni sampling time). quando un sampling time non commette errori su tutti i possibili arrival delay allora quello é il piú grande samplig time che non commette errori